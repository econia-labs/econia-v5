# cspell:words snok, virtualenvs, pydeps, venv, Pylint, pylint
---
env:
  POETRY_VERSION: '1.5.1'
  PYTHON_VERSION: '3.9'
jobs:
  pre-commit:
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v3'
    - uses: 'actions/setup-python@v3'
      with:
        python-version: '${{ env.PYTHON_VERSION }}'
    - name: 'Cache Poetry Install'
      uses: 'actions/cache@v3'
      with:
        key: 'poetry-${{ env.POETRY_VERSION }}'
        path: '${{ runner.home }}/.local/src/python/hooks'
    - name: 'Install Poetry'
      uses: 'snok/install-poetry@v1.3.4'
      with:
        installer-parallel: true
        version: '${{ env.POETRY_VERSION }}'
        virtualenvs-create: true
        virtualenvs-in-project: true
    - id: 'cache-deps'
      name: 'Cache Dependencies'
      uses: 'actions/cache@v3'
      with:
        key: |
          pydeps-${{ hashFiles('**/poetry.lock') }}
        path: '.venv'
    - if: |
        steps.cache-deps.outputs.cache-hit != 'true'
      name: 'Install Dependencies'
      # `--no-root` to install all dependencies but not the project itself.
      run: 'poetry install --no-interaction --no-root'
    - name: 'Install Poetry Project'
      run: 'poetry install --no-interaction'
    - uses: 'pre-commit/action@v3.0.0'
      with:
        extra_args: '--all-files --config cfg/pre-commit-config.yaml --verbose'
name: 'pre-commit'
'on':
  pull_request: null
  workflow_dispatch: null
...
